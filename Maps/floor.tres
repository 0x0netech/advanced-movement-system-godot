[gd_resource type="VisualShader" load_steps=5 format=3 uid="uid://bb6fys6tydvir"]

[ext_resource type="Texture2D" uid="uid://lrv5s5qmfhd0" path="res://Maps/Grid.png" id="1_6ol84"]

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_s1p6c"]
default_input_values = []
expanded_output_ports = []
texture = ExtResource( "1_6ol84" )

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_vg0om"]
default_input_values = []
expanded_output_ports = []
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_1itqx"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(60, 40, 1)]
expanded_output_ports = []
operator = 2

[resource]
code = "shader_type spatial;
uniform sampler2D tex_frg_3;



void fragment() {
// Input:4
	vec3 n_out4p0 = vec3(UV, 0.0);


// VectorOp:5
	vec3 n_in5p1 = vec3(60.00000, 40.00000, 1.00000);
	vec3 n_out5p0 = n_out4p0 * n_in5p1;


// Texture2D:3
	vec4 tex_frg_3_read = texture(tex_frg_3, n_out5p0.xy);
	vec3 n_out3p0 = tex_frg_3_read.rgb;
	float n_out3p1 = tex_frg_3_read.a;


// Output:0
	ALBEDO = n_out3p0;


}
"
graph_offset = Vector2(-375.688, -68.4823)
engine_version = {
"major": 4,
"minor": 0
}
nodes/fragment/0/position = Vector2(400, 160)
nodes/fragment/3/node = SubResource( "VisualShaderNodeTexture_s1p6c" )
nodes/fragment/3/position = Vector2(60, 80)
nodes/fragment/4/node = SubResource( "VisualShaderNodeInput_vg0om" )
nodes/fragment/4/position = Vector2(-360, 80)
nodes/fragment/5/node = SubResource( "VisualShaderNodeVectorOp_1itqx" )
nodes/fragment/5/position = Vector2(-180, 80)
nodes/fragment/connections = PackedInt32Array(3, 0, 0, 0, 4, 0, 5, 0, 5, 0, 3, 0)
